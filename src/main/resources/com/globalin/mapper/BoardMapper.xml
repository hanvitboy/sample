<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.globalin.mapper.BoardMapper">



	<!-- 하나 가져오기 -->
	<select id="getpage" resultType="com.globalin.domain.BoardVO">
		SELECT BNO,
			   TITLE,
			   CONTENT,
		 	   WRITER,
		   	   REGDATE,
			   UPDATEDATE,
			   reply_count,
			   HIT,
			   LIKE_COUNT
		FROM tbl_board 
		WHERE bno=#{bno}
		
	</select>
	
	<!-- 삽입하기 -->
	<insert id="insert" parameterType="com.globalin.domain.BoardVO">
		INSERT INTO tbl_board (bno,title, content, writer)
		VALUES (seq_board.nextval,#{title},#{content},#{writer})
		<selectKey resultType="int" keyProperty="bno" order="AFTER">
			SELECT seq_board.currval FROM DUAL
		</selectKey>
	</insert>
	
	<!-- 삭제하기 -->
	<delete id="delete">
		DELETE FROM tbl_board
		WHERE bno=#{bno}
	</delete>
	
	<!-- 수정하기 -->
	<update id="update">
		UPDATE tbl_board 
		SET title=#{title},
			content=#{content},
			writer=#{writer},
			updateDate =sysdate
		WHERE bno=#{bno}
		
	</update>

	<!-- 리스트가져오기 -->
	<select id="getList" resultType="com.globalin.domain.BoardVO">	
		SELECT * 
		FROM tbl_board 
		WHERE bno > 0
		ORDER BY bno DESC
				
	</select>
	
	<!-- 검색 조건문 -->
    <sql id="criteria">
        <trim prefix="AND (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'C'.toString()">
                            content like '%'||#{keyword}||'%' 
                        </when>
                        <when test="type == 'W'.toString()">
                            writer like '%'||#{keyword}||'%' 
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    
    </sql>
	
		<!-- 리스트가져오기 (페이징 처리) -->
	<select id="getListPaging" resultType="com.globalin.domain.BoardVO">    
    <![CDATA[
        
        SELECT bno, title, content, writer, regdate, updatedate, hit,like_count,reply_count
        FROM(
        	SELECT /*+INDEX_DESC(tbl_board) */ rownum  as rn, bno, title, content, writer, regdate, updatedate, hit,like_count,reply_count
            FROM tbl_board
            WHERE rownum <= #{pageNum} * #{amount}
              
                ]]>     
                <if test="keyword != null">
                    <include refid="criteria"></include>  
                </if>
                
      <![CDATA[
            ) 
        WHERE rn > (#{pageNum} -1) * #{amount}
    
    ]]>
    
    
    </select>
	
	<!-- 게시판 조회수 -->
    <update id="boardHit" parameterType="int">    
    	UPDATE tbl_board 
    	SET hit = hit+1
    	WHERE BNO = #{bno}
    	
    </update>
    
    <!-- 전체 게시글 갯수 -->
   <select id="getTotal" resultType="int">    
        SELECT count(*)
        FROM tbl_board
        <!-- 검색하면 검색 키워드로	 -->
        <if test="keyword != null">
        <!-- where bno > 0은 아무의미 없는 조건이지만 뒤에 붙는 criteria의 시작이 and 구문이기때문에 오류방지를위해 붙여준다. -->
            where bno > 0 <include refid="criteria"></include> 
        </if>
    
   </select>
   
   <!-- 게시판 총좋아요 +1 -->
   <update id="likeTotal" parameterType="int">
       UPDATE tbl_board 
    	SET like_count = like_count+1
    	WHERE BNO = #{bno}
       
   </update>
   <!-- 게시판 총좋아요 -1 -->
   <update id="likeTotalM" parameterType="int">
       UPDATE tbl_board 
    	SET like_count = like_count-1
    	WHERE BNO = #{bno}
       
   </update>
   
   <update id="commentTotal" parameterType="int">
   		UPDATE tbl_board 
   		SET reply_count = (SELECT COUNT(rno)
   						FROM tbl_reply
   						WHERE bno=#{bno})
   		WHERE bno=#{bno}
   
   
   </update>
   

</mapper>